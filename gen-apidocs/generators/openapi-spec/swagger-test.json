{
  "swagger": "2.0",
  "info": {
   "title": "Kubernetes",
   "version": "v1.8.0"
  },


  "paths": {


   "/api/": {
    "get": {
     "description": "get available API versions",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core"
     ],
     "operationId": "getCoreAPIVersions",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },


   "/api/v1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "getCoreV1APIResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },

  
   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "listAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "createAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "deleteAppsV1beta1CollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "readAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "replaceAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "deleteAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "patchAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/rollback": {
    "post": {
     "description": "create rollback of a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "createAppsV1beta1NamespacedDeploymentRollback",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentRollback"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentRollback"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "DeploymentRollback",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DeploymentRollback",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "readAppsV1beta1NamespacedDeploymentScale",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "replaceAppsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update scale of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "patchAppsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "readAppsV1beta1NamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "replaceAppsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "patchAppsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
  
   "/apis/apps/v1beta1/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "watchAppsV1beta1DeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
  
   "/apis/apps/v1beta1/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "watchAppsV1beta1NamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta1/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "watchAppsV1beta1NamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
   
  
   "/apis/apps/v1beta2/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "listAppsV1beta2DeploymentForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
  
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "listAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "createAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "deleteAppsV1beta2CollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "readAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "replaceAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "deleteAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "patchAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "readAppsV1beta2NamespacedDeploymentScale",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta2"
     }
    },
    "put": {
     "description": "replace scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "replaceAppsV1beta2NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta2"
     }
    },
    "patch": {
     "description": "partially update scale of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "patchAppsV1beta2NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "readAppsV1beta2NamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "replaceAppsV1beta2NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "patchAppsV1beta2NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
  
   "/apis/apps/v1beta2/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "watchAppsV1beta2DeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
   
  
   "/apis/apps/v1beta2/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "watchAppsV1beta2NamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/apps/v1beta2/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "watchAppsV1beta2NamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
  
   "/apis/extensions/v1beta1/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "listExtensionsV1beta1DeploymentForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
   
  "/apis/extensions/v1beta1/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "listExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "createExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "deleteExtensionsV1beta1CollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "readExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "replaceExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "deleteExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "patchExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback": {
    "post": {
     "description": "create rollback of a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "createExtensionsV1beta1NamespacedDeploymentRollback",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentRollback"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentRollback"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "DeploymentRollback",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DeploymentRollback",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "readExtensionsV1beta1NamespacedDeploymentScale",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Scale",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "replaceExtensionsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Scale",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update scale of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "patchExtensionsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Scale",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "readExtensionsV1beta1NamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "replaceExtensionsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "patchExtensionsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
  
  
   "/apis/extensions/v1beta1/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "watchExtensionsV1beta1DeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
  
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "watchExtensionsV1beta1NamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   
   
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "watchExtensionsV1beta1NamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
  },
  
  "definitions": {

   "io.k8s.api.apps.v1beta1.Deployment": {
    "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    ]
   },

   "io.k8s.api.apps.v1beta1.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.apps.v1beta1.DeploymentList": {
    "description": "DeploymentList is a list of Deployments.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of Deployments.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentList",
      "version": "v1beta1"
     }
    ]
   },

   "io.k8s.api.apps.v1beta1.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.",
      "type": "integer",
      "format": "int32"
     },
     "rollbackTo": {
      "description": "DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.RollbackConfig"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
   },

   "io.k8s.api.apps.v1beta1.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

   "io.k8s.api.apps.v1beta1.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.apps.v1beta1.RollingUpdateDeployment": {
    "description": "Spec to control the desired behavior of rolling update.",
    "properties": {
     "maxSurge": {
      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "maxUnavailable": {
      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    }
   },

   "io.k8s.api.apps.v1beta1.Scale": {
    "description": "Scale represents a scaling request for a resource.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.ScaleStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta1"
     }
    ]
   },

   "io.k8s.api.apps.v1beta1.ScaleSpec": {
    "description": "ScaleSpec describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

   "io.k8s.api.apps.v1beta1.ScaleStatus": {
    "description": "ScaleStatus represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "type": "string"
     }
    }
   },
    
   "io.k8s.api.apps.v1beta2.Deployment": {
    "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    ]
   },

   "io.k8s.api.apps.v1beta2.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.apps.v1beta2.DeploymentList": {
    "description": "DeploymentList is a list of Deployments.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of Deployments.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentList",
      "version": "v1beta2"
     }
    ]
   },

   "io.k8s.api.apps.v1beta2.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
   },

   "io.k8s.api.apps.v1beta2.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

   "io.k8s.api.apps.v1beta2.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.apps.v1beta2.Scale": {
    "description": "Scale represents a scaling request for a resource.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.ScaleStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta2"
     }
    ]
   },

   "io.k8s.api.apps.v1beta2.ScaleSpec": {
    "description": "ScaleSpec describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

   "io.k8s.api.apps.v1beta2.ScaleStatus": {
    "description": "ScaleStatus represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "type": "string"
     }
    }
   },
    
   "io.k8s.api.autoscaling.v1.ScaleSpec": {
    "description": "ScaleSpec describes the attributes of a scale subresource.",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

  "io.k8s.api.autoscaling.v1.ScaleStatus": {
    "description": "ScaleStatus represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.Container": {
    "description": "A single application container that you want to run within a pod.",
    "required": [
     "name"
    ],
    "properties": {
     "args": {
      "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "command": {
      "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "env": {
      "description": "List of environment variables to set in the container. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "envFrom": {
      "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
      }
     },
     "image": {
      "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
      "type": "string"
     },
     "imagePullPolicy": {
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
      "type": "string"
     },
     "lifecycle": {
      "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
      "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
     },
     "livenessProbe": {
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
     },
     "name": {
      "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
      "type": "string"
     },
     "ports": {
      "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
      },
      "x-kubernetes-patch-merge-key": "containerPort",
      "x-kubernetes-patch-strategy": "merge"
     },
     "readinessProbe": {
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
     },
     "resources": {
      "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
     },
     "securityContext": {
      "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://git.k8s.io/community/contributors/design-proposals/security_context.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
     },
     "stdin": {
      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
      "type": "boolean"
     },
     "stdinOnce": {
      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
      "type": "boolean"
     },
     "terminationMessagePath": {
      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
      "type": "string"
     },
     "terminationMessagePolicy": {
      "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
      "type": "string"
     },
     "tty": {
      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
      "type": "boolean"
     },
     "volumeMounts": {
      "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
      },
      "x-kubernetes-patch-merge-key": "mountPath",
      "x-kubernetes-patch-strategy": "merge"
     },
     "workingDir": {
      "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.ContainerPort": {
    "description": "ContainerPort represents a network port in a single container.",
    "required": [
     "containerPort"
    ],
    "properties": {
     "containerPort": {
      "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
      "type": "integer",
      "format": "int32"
     },
     "hostIP": {
      "description": "What host IP to bind the external port to.",
      "type": "string"
     },
     "hostPort": {
      "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
      "type": "integer",
      "format": "int32"
     },
     "name": {
      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
      "type": "string"
     },
     "protocol": {
      "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.EnvFromSource": {
    "description": "EnvFromSource represents the source of a set of ConfigMaps",
    "properties": {
     "configMapRef": {
      "description": "The ConfigMap to select from",
      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
     },
     "prefix": {
      "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "secretRef": {
      "description": "The Secret to select from",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
     }
    }
   },

   "io.k8s.api.core.v1.EnvVar": {
    "description": "EnvVar represents an environment variable present in a Container.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "value": {
      "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
      "type": "string"
     },
     "valueFrom": {
      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
      "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
     }
    }
   },

   "io.k8s.api.core.v1.EnvVarSource": {
    "description": "EnvVarSource represents a source for the value of an EnvVar.",
    "properties": {
     "configMapKeyRef": {
      "description": "Selects a key of a ConfigMap.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
     },
     "fieldRef": {
      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
     },
     "resourceFieldRef": {
      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
     },
     "secretKeyRef": {
      "description": "Selects a key of a secret in the pod's namespace",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
     }
    }
   },
  
   "io.k8s.api.core.v1.HTTPGetAction": {
    "description": "HTTPGetAction describes an action based on HTTP Get requests.",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
      "type": "string"
     },
     "httpHeaders": {
      "description": "Custom headers to set in the request. HTTP allows repeated headers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
      }
     },
     "path": {
      "description": "Path to access on the HTTP server.",
      "type": "string"
     },
     "port": {
      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "scheme": {
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.HTTPHeader": {
    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
    "required": [
     "name",
     "value"
    ],
    "properties": {
     "name": {
      "description": "The header field name",
      "type": "string"
     },
     "value": {
      "description": "The header field value",
      "type": "string"
     }
    }
   },
  
   "io.k8s.api.core.v1.HostAlias": {
    "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
    "properties": {
     "hostnames": {
      "description": "Hostnames for the above IP address.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "ip": {
      "description": "IP address of the host file entry.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.Pod": {
    "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
     },
     "status": {
      "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "Pod",
      "version": "v1"
     }
    ]
   },

   "io.k8s.api.core.v1.PodAffinity": {
    "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
      }
     }
    }
   },
  
   "io.k8s.api.core.v1.PodAffinityTerm": {
    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e tches that of any node on which a pod of the set of pods is running",
    "properties": {
     "labelSelector": {
      "description": "A label query over a set of resources, in this case pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "namespaces": {
      "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "topologyKey": {
      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. For PreferredDuringScheduling pod anti-affinity, empty topologyKey is interpreted as \"all topologies\" (\"all topologies\" here means all the topologyKeys indicated by scheduler command-line argument --failure-domains); for affinity and for RequiredDuringScheduling pod anti-affinity, empty topologyKey is not allowed.",
      "type": "string"
     }
    }
   },
  
   "io.k8s.api.core.v1.PodAntiAffinity": {
    "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
      }
     }
    }
   },

   "io.k8s.api.core.v1.PodCondition": {
    "description": "PodCondition contains details for the current condition of this pod.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "description": "Last time we probed the condition.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "Human-readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
      "type": "string"
     },
     "type": {
      "description": "Type is the type of the condition. Currently only Ready. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.PodList": {
    "description": "PodList is a list of Pods.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "PodList",
      "version": "v1"
     }
    ]
   },

   "io.k8s.api.core.v1.PodSecurityContext": {
    "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
    "properties": {
     "fsGroup": {
      "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
      "type": "integer",
      "format": "int64"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
     },
     "supplementalGroups": {
      "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int64"
      }
     }
    }
   },

   "io.k8s.api.core.v1.PodSpec": {
    "description": "PodSpec is a description of a pod.",
    "required": [
     "containers"
    ],
    "properties": {
     "activeDeadlineSeconds": {
      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
      "type": "integer",
      "format": "int64"
     },
     "affinity": {
      "description": "If specified, the pod's scheduling constraints",
      "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
     },
     "automountServiceAccountToken": {
      "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
      "type": "boolean"
     },
     "containers": {
      "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Container"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "dnsPolicy": {
      "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
      "type": "string"
     },
     "hostAliases": {
      "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
      },
      "x-kubernetes-patch-merge-key": "ip",
      "x-kubernetes-patch-strategy": "merge"
     },
     "hostIPC": {
      "description": "Use the host's ipc namespace. Optional: Default to false.",
      "type": "boolean"
     },
     "hostNetwork": {
      "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
      "type": "boolean"
     },
     "hostPID": {
      "description": "Use the host's pid namespace. Optional: Default to false.",
      "type": "boolean"
     },
     "hostname": {
      "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
      "type": "string"
     },
     "imagePullSecrets": {
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "initContainers": {
      "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Container"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "nodeName": {
      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
      "type": "string"
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "priority": {
      "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
      "type": "integer",
      "format": "int32"
     },
     "priorityClassName": {
      "description": "If specified, indicates the pod's priority. \"SYSTEM\" is a special keyword which indicates the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
      "type": "string"
     },
     "restartPolicy": {
      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
      "type": "string"
     },
     "schedulerName": {
      "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
      "type": "string"
     },
     "securityContext": {
      "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
     },
     "serviceAccount": {
      "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
      "type": "string"
     },
     "serviceAccountName": {
      "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
      "type": "string"
     },
     "subdomain": {
      "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\". If not specified, the pod will not have a domainname at all.",
      "type": "string"
     },
     "terminationGracePeriodSeconds": {
      "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
      "type": "integer",
      "format": "int64"
     },
     "tolerations": {
      "description": "If specified, the pod's tolerations.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
      }
     },
     "volumes": {
      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge,retainKeys"
     }
    }
   },

   "io.k8s.api.core.v1.PodStatus": {
    "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system.",
    "properties": {
     "conditions": {
      "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "containerStatuses": {
      "description": "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
      }
     },
     "hostIP": {
      "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
      "type": "string"
     },
     "initContainerStatuses": {
      "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
      }
     },
     "message": {
      "description": "A human readable message indicating details about why the pod is in this condition.",
      "type": "string"
     },
     "phase": {
      "description": "Current condition of the pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase",
      "type": "string"
     },
     "podIP": {
      "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
      "type": "string"
     },
     "qosClass": {
      "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://github.com/kubernetes/kubernetes/blob/master/docs/design/resource-qos.md",
      "type": "string"
     },
     "reason": {
      "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
      "type": "string"
     },
     "startTime": {
      "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },

   "io.k8s.api.core.v1.PodTemplate": {
    "description": "PodTemplate describes a template for creating copies of a predefined pod.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "template": {
      "description": "Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "PodTemplate",
      "version": "v1"
     }
    ]
   },

   "io.k8s.api.core.v1.PodTemplateList": {
    "description": "PodTemplateList is a list of PodTemplates.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "List of pod templates",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplate"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "PodTemplateList",
      "version": "v1"
     }
    ]
   },

   "io.k8s.api.core.v1.PodTemplateSpec": {
    "description": "PodTemplateSpec describes the data a pod should have when created from a template",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
     }
    }
   },

   "io.k8s.api.core.v1.Probe": {
    "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
     },
     "failureThreshold": {
      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
     },
     "initialDelaySeconds": {
      "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     },
     "periodSeconds": {
      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "successThreshold": {
      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
     },
     "timeoutSeconds": {
      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     }
    }
   },
    
   "io.k8s.api.core.v1.SELinuxOptions": {
    "description": "SELinuxOptions are the labels to be applied to the container",
    "properties": {
     "level": {
      "description": "Level is SELinux level label that applies to the container.",
      "type": "string"
     },
     "role": {
      "description": "Role is a SELinux role label that applies to the container.",
      "type": "string"
     },
     "type": {
      "description": "Type is a SELinux type label that applies to the container.",
      "type": "string"
     },
     "user": {
      "description": "User is a SELinux user label that applies to the container.",
      "type": "string"
     }
    }
   },

  
   "io.k8s.api.core.v1.SecretEnvSource": {
    "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the Secret must be defined",
      "type": "boolean"
     }
    }
   },

   "io.k8s.api.core.v1.SecurityContext": {
    "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
    "properties": {
     "allowPrivilegeEscalation": {
      "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
      "type": "boolean"
     },
     "capabilities": {
      "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
      "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
     },
     "privileged": {
      "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
      "type": "boolean"
     },
     "readOnlyRootFilesystem": {
      "description": "Whether this container has a read-only root filesystem. Default is false.",
      "type": "boolean"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
     }
    }
   },
  
   "io.k8s.api.core.v1.Volume": {
    "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
    "required": [
     "name"
    ],
    "properties": {
     "awsElasticBlockStore": {
      "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
      "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
     },
     "azureDisk": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
     },
     "azureFile": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
     },
     "cephfs": {
      "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
      "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
     },
     "cinder": {
      "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
     },
     "configMap": {
      "description": "ConfigMap represents a configMap that should populate this volume",
      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
     },
     "downwardAPI": {
      "description": "DownwardAPI represents downward API about the pod that should populate this volume",
      "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
     },
     "emptyDir": {
      "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
      "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
     },
     "fc": {
      "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
      "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
     },
     "flexVolume": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
      "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
     },
     "flocker": {
      "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
      "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
     },
     "gcePersistentDisk": {
      "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
      "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
     },
     "gitRepo": {
      "description": "GitRepo represents a git repository at a particular revision.",
      "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
     },
     "glusterfs": {
      "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
     },
     "hostPath": {
      "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
      "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
     },
     "iscsi": {
      "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
     },
     "name": {
      "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "nfs": {
      "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
      "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
     },
     "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
     },
     "photonPersistentDisk": {
      "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
      "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
     },
     "portworxVolume": {
      "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
      "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
     },
     "projected": {
      "description": "Items for all in one resources secrets, configmaps, and downward API",
      "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
     },
     "quobyte": {
      "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
      "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
     },
     "rbd": {
      "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
     },
     "scaleIO": {
      "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
     },
     "secret": {
      "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
     },
     "storageos": {
      "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
      "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
     },
     "vsphereVolume": {
      "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
      "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
     }
    }
   },

   "io.k8s.api.core.v1.VolumeMount": {
    "description": "VolumeMount describes a mounting of a Volume within a container.",
    "required": [
     "name",
     "mountPath"
    ],
    "properties": {
     "mountPath": {
      "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
      "type": "string"
     },
     "mountPropagation": {
      "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationHostToContainer is used. This field is alpha in 1.8 and can be reworked or removed in a future release.",
      "type": "string"
     },
     "name": {
      "description": "This must match the Name of a Volume.",
      "type": "string"
     },
     "readOnly": {
      "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
      "type": "boolean"
     },
     "subPath": {
      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
      "type": "string"
     }
    }
   },

   "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
    "required": [
     "weight",
     "podAffinityTerm"
    ],
    "properties": {
     "podAffinityTerm": {
      "description": "Required. A pod affinity term, associated with the corresponding weight.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
     },
     "weight": {
      "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

   "io.k8s.api.extensions.v1beta1.Deployment": {
    "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    ]
   },

   "io.k8s.api.extensions.v1beta1.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
   },

   "io.k8s.api.extensions.v1beta1.DeploymentList": {
    "description": "DeploymentList is a list of Deployments.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of Deployments.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentList",
      "version": "v1beta1"
     }
    ]
   },

   "io.k8s.api.extensions.v1beta1.DeploymentRollback": {
    "description": "DEPRECATED. DeploymentRollback stores the information required to rollback a deployment.",
    "required": [
     "name",
     "rollbackTo"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Required: This must match the Name of a deployment.",
      "type": "string"
     },
     "rollbackTo": {
      "description": "The config of this deployment rollback.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollbackConfig"
     },
     "updatedAnnotations": {
      "description": "The annotations to be updated to a deployment",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentRollback",
      "version": "v1beta1"
     }
    ]
   },

   "io.k8s.api.extensions.v1beta1.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused and will not be processed by the deployment controller.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is not set by default.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.",
      "type": "integer",
      "format": "int32"
     },
     "rollbackTo": {
      "description": "DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollbackConfig"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "x-kubernetes-patch-strategy": "retainKeys",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
   },

   "io.k8s.api.extensions.v1beta1.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
   },

   "io.k8s.api.extensions.v1beta1.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
   },

 
   "io.k8s.api.extensions.v1beta1.NetworkPolicy": {
    "description": "NetworkPolicy describes what network traffic is allowed for a set of Pods",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior for this NetworkPolicy.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicySpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "NetworkPolicy",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.NetworkPolicyEgressRule": {
    "description": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8",
    "properties": {
     "ports": {
      "description": "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicyPort"
      }
     },
     "to": {
      "description": "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicyPeer"
      }
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.NetworkPolicyIngressRule": {
    "description": "This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from.",
    "properties": {
     "from": {
      "description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicyPeer"
      }
     },
     "ports": {
      "description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicyPort"
      }
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.NetworkPolicyList": {
    "description": "Network Policy List is a list of NetworkPolicy objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of schema objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicy"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "NetworkPolicyList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.NetworkPolicyPeer": {
    "properties": {
     "ipBlock": {
      "description": "IPBlock defines policy on a particular IPBlock",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IPBlock"
     },
     "namespaceSelector": {
      "description": "Selects Namespaces using cluster scoped-labels.  This matches all pods in all namespaces selected by this label selector. This field follows standard label selector semantics. If present but empty, this selector selects all namespaces.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "podSelector": {
      "description": "This is a label selector which selects Pods in this namespace. This field follows standard label selector semantics. If present but empty, this selector selects all pods in this namespace.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.NetworkPolicyPort": {
    "properties": {
     "port": {
      "description": "If specified, the port on the given protocol.  This can either be a numerical or named port on a pod.  If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "protocol": {
      "description": "Optional.  The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.NetworkPolicySpec": {
    "required": [
     "podSelector"
    ],
    "properties": {
     "egress": {
      "description": "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicyEgressRule"
      }
     },
     "ingress": {
      "description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default).",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.NetworkPolicyIngressRule"
      }
     },
     "podSelector": {
      "description": "Selects the pods to which this NetworkPolicy object applies.  The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods.  In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "policyTypes": {
      "description": "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.PodSecurityPolicy": {
    "description": "Pod Security Policy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "spec defines the policy enforced.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicySpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "PodSecurityPolicy",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.PodSecurityPolicyList": {
    "description": "Pod Security Policy List is a list of PodSecurityPolicy objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of schema objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.PodSecurityPolicy"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "PodSecurityPolicyList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.PodSecurityPolicySpec": {
    "description": "Pod Security Policy Spec defines the policy enforced.",
    "required": [
     "seLinux",
     "runAsUser",
     "supplementalGroups",
     "fsGroup"
    ],
    "properties": {
     "allowPrivilegeEscalation": {
      "description": "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation.",
      "type": "boolean"
     },
     "allowedCapabilities": {
      "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "allowedHostPaths": {
      "description": "is a white list of allowed host paths. Empty indicates that all host paths may be used.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.AllowedHostPath"
      }
     },
     "defaultAddCapabilities": {
      "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "defaultAllowPrivilegeEscalation": {
      "description": "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.",
      "type": "boolean"
     },
     "fsGroup": {
      "description": "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.FSGroupStrategyOptions"
     },
     "hostIPC": {
      "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
      "type": "boolean"
     },
     "hostNetwork": {
      "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
      "type": "boolean"
     },
     "hostPID": {
      "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
      "type": "boolean"
     },
     "hostPorts": {
      "description": "hostPorts determines which host port ranges are allowed to be exposed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.HostPortRange"
      }
     },
     "privileged": {
      "description": "privileged determines if a pod can request to be run as privileged.",
      "type": "boolean"
     },
     "readOnlyRootFilesystem": {
      "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
      "type": "boolean"
     },
     "requiredDropCapabilities": {
      "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "runAsUser": {
      "description": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RunAsUserStrategyOptions"
     },
     "seLinux": {
      "description": "seLinux is the strategy that will dictate the allowable labels that may be set.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.SELinuxStrategyOptions"
     },
     "supplementalGroups": {
      "description": "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.SupplementalGroupsStrategyOptions"
     },
     "volumes": {
      "description": "volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.ReplicaSet": {
    "description": "DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See the release notes for more information. ReplicaSet represents the configuration of a ReplicaSet.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ReplicaSetSpec"
     },
     "status": {
      "description": "Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ReplicaSetStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "ReplicaSet",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.ReplicaSetCondition": {
    "description": "ReplicaSetCondition describes the state of a replica set at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "The last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of replica set condition.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.ReplicaSetList": {
    "description": "ReplicaSetList is a collection of ReplicaSets.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ReplicaSet"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "ReplicaSetList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.ReplicaSetSpec": {
    "description": "ReplicaSetSpec is the specification of a ReplicaSet.",
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Selector is a label query over pods that should match the replica count. If the selector is empty, it is defaulted to the labels present on the pod template. Label keys and values that must match in order to be controlled by this replica set. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.ReplicaSetStatus": {
    "description": "ReplicaSetStatus represents the current status of a ReplicaSet.",
    "required": [
     "replicas"
    ],
    "properties": {
     "availableReplicas": {
      "description": "The number of available replicas (ready for at least minReadySeconds) for this replica set.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a replica set's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ReplicaSetCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "fullyLabeledReplicas": {
      "description": "The number of pods that have labels matching the labels of the pod template of the replicaset.",
      "type": "integer",
      "format": "int32"
     },
     "observedGeneration": {
      "description": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "The number of ready replicas for this replica set.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
      "type": "integer",
      "format": "int32"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.RollbackConfig": {
    "description": "DEPRECATED.",
    "properties": {
     "revision": {
      "description": "The revision to rollback to. If set to 0, rollback to the last revision.",
      "type": "integer",
      "format": "int64"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.RollingUpdateDaemonSet": {
    "description": "Spec to control the desired behavior of daemon set rolling update.",
    "properties": {
     "maxUnavailable": {
      "description": "The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.RollingUpdateDeployment": {
    "description": "Spec to control the desired behavior of rolling update.",
    "properties": {
     "maxSurge": {
      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "maxUnavailable": {
      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.RunAsUserStrategyOptions": {
    "description": "Run A sUser Strategy Options defines the strategy type and any options used to create the strategy.",
    "required": [
     "rule"
    ],
    "properties": {
     "ranges": {
      "description": "Ranges are the allowed ranges of uids that may be used.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IDRange"
      }
     },
     "rule": {
      "description": "Rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.SELinuxStrategyOptions": {
    "description": "SELinux  Strategy Options defines the strategy type and any options used to create the strategy.",
    "required": [
     "rule"
    ],
    "properties": {
     "rule": {
      "description": "type is the strategy that will dictate the allowable labels that may be set.",
      "type": "string"
     },
     "seLinuxOptions": {
      "description": "seLinuxOptions required to run as; required for MustRunAs More info: https://git.k8s.io/community/contributors/design-proposals/security_context.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.Scale": {
    "description": "represents a scaling request for a resource.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ScaleStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "Scale",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.extensions.v1beta1.ScaleSpec": {
    "description": "describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.ScaleStatus": {
    "description": "represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "type": "string"
     }
    }
   },


   "io.k8s.api.extensions.v1beta1.SupplementalGroupsStrategyOptions": {
    "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
    "properties": {
     "ranges": {
      "description": "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IDRange"
      }
     },
     "rule": {
      "description": "Rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.networking.v1.IPBlock": {
    "description": "IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
    "required": [
     "cidr"
    ],
    "properties": {
     "cidr": {
      "description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\"",
      "type": "string"
     },
     "except": {
      "description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.networking.v1.NetworkPolicy": {
    "description": "NetworkPolicy describes what network traffic is allowed for a set of Pods",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior for this NetworkPolicy.",
      "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicySpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "networking.k8s.io",
      "kind": "NetworkPolicy",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
    "description": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8",
    "properties": {
     "ports": {
      "description": "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
      }
     },
     "to": {
      "description": "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
      }
     }
    }
   },


   "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
    "description": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.",
    "properties": {
     "from": {
      "description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
      }
     },
     "ports": {
      "description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
      }
     }
    }
   },


   "io.k8s.api.networking.v1.NetworkPolicyList": {
    "description": "NetworkPolicyList is a list of NetworkPolicy objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of schema objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicy"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "networking.k8s.io",
      "kind": "NetworkPolicyList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.networking.v1.NetworkPolicyPeer": {
    "description": "NetworkPolicyPeer describes a peer to allow traffic from. Exactly one of its fields must be specified.",
    "properties": {
     "ipBlock": {
      "description": "IPBlock defines policy on a particular IPBlock",
      "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock"
     },
     "namespaceSelector": {
      "description": "Selects Namespaces using cluster scoped-labels. This matches all pods in all namespaces selected by this label selector. This field follows standard label selector semantics. If present but empty, this selector selects all namespaces.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "podSelector": {
      "description": "This is a label selector which selects Pods in this namespace. This field follows standard label selector semantics. If present but empty, this selector selects all pods in this namespace.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     }
    }
   },


   "io.k8s.api.networking.v1.NetworkPolicyPort": {
    "description": "NetworkPolicyPort describes a port to allow traffic on",
    "properties": {
     "port": {
      "description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "protocol": {
      "description": "The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.networking.v1.NetworkPolicySpec": {
    "description": "NetworkPolicySpec provides the specification of a NetworkPolicy",
    "required": [
     "podSelector"
    ],
    "properties": {
     "egress": {
      "description": "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
      }
     },
     "ingress": {
      "description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
      }
     },
     "podSelector": {
      "description": "Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "policyTypes": {
      "description": "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.policy.v1beta1.Eviction": {
    "description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/\u003cpod name\u003e/evictions.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "deleteOptions": {
      "description": "DeleteOptions may be provided",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "ObjectMeta describes the pod that is being evicted.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "policy",
      "kind": "Eviction",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.policy.v1beta1.PodDisruptionBudget": {
    "description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the PodDisruptionBudget.",
      "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec"
     },
     "status": {
      "description": "Most recently observed status of the PodDisruptionBudget.",
      "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "policy",
      "kind": "PodDisruptionBudget",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList": {
    "description": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudget"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "policy",
      "kind": "PodDisruptionBudgetList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec": {
    "description": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
    "properties": {
     "maxUnavailable": {
      "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "minAvailable": {
      "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "selector": {
      "description": "Label query over pods whose evictions are managed by the disruption budget.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     }
    }
   },


   "io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus": {
    "description": "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.",
    "required": [
     "disruptedPods",
     "disruptionsAllowed",
     "currentHealthy",
     "desiredHealthy",
     "expectedPods"
    ],
    "properties": {
     "currentHealthy": {
      "description": "current number of healthy pods",
      "type": "integer",
      "format": "int32"
     },
     "desiredHealthy": {
      "description": "minimum desired number of healthy pods",
      "type": "integer",
      "format": "int32"
     },
     "disruptedPods": {
      "description": "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
      }
     },
     "disruptionsAllowed": {
      "description": "Number of pod disruptions that are currently allowed.",
      "type": "integer",
      "format": "int32"
     },
     "expectedPods": {
      "description": "total number of pods counted by this disruption budget",
      "type": "integer",
      "format": "int32"
     },
     "observedGeneration": {
      "description": "Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation.",
      "type": "integer",
      "format": "int64"
     }
    }
   },


   "io.k8s.api.rbac.v1.ClusterRole": {
    "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this ClusterRole",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "version": "v1"
     }
    ]
   },



   "io.k8s.api.rbac.v1.ClusterRoleBinding": {
    "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleBinding",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.ClusterRoleBindingList": {
    "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of ClusterRoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRoleBinding"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleBindingList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.ClusterRoleList": {
    "description": "ClusterRoleList is a collection of ClusterRoles",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of ClusterRoles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRole"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.PolicyRule": {
    "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
    "required": [
     "verbs"
    ],
    "properties": {
     "apiGroups": {
      "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "nonResourceURLs": {
      "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resourceNames": {
      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resources": {
      "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "verbs": {
      "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.rbac.v1.Role": {
    "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this Role",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "Role",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.RoleBinding": {
    "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleBinding",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.RoleBindingList": {
    "description": "RoleBindingList is a collection of RoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of RoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleBinding"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleBindingList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.RoleList": {
    "description": "RoleList is a collection of Roles",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of Roles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1.Role"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.rbac.v1.RoleRef": {
    "description": "RoleRef contains information that points to the role being used",
    "required": [
     "apiGroup",
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string"
     }
    }
   },


   "io.k8s.api.rbac.v1.Subject": {
    "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
      "type": "string"
     },
     "name": {
      "description": "Name of the object being referenced.",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.rbac.v1alpha1.ClusterRole": {
    "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this ClusterRole",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.PolicyRule"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.ClusterRoleBinding": {
    "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.Subject"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleBinding",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.ClusterRoleBindingList": {
    "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of ClusterRoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.ClusterRoleBinding"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleBindingList",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.ClusterRoleList": {
    "description": "ClusterRoleList is a collection of ClusterRoles",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of ClusterRoles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.ClusterRole"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleList",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.PolicyRule": {
    "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
    "required": [
     "verbs"
    ],
    "properties": {
     "apiGroups": {
      "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "nonResourceURLs": {
      "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different. Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resourceNames": {
      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resources": {
      "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "verbs": {
      "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.rbac.v1alpha1.Role": {
    "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this Role",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.PolicyRule"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "Role",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.RoleBinding": {
    "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.Subject"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleBinding",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.RoleBindingList": {
    "description": "RoleBindingList is a collection of RoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of RoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.RoleBinding"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleBindingList",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.RoleList": {
    "description": "RoleList is a collection of Roles",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of Roles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1alpha1.Role"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleList",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.rbac.v1alpha1.RoleRef": {
    "description": "RoleRef contains information that points to the role being used",
    "required": [
     "apiGroup",
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string"
     }
    }
   },


   "io.k8s.api.rbac.v1alpha1.Subject": {
    "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion holds the API group and version of the referenced subject. Defaults to \"v1\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io/v1alpha1\" for User and Group subjects.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
      "type": "string"
     },
     "name": {
      "description": "Name of the object being referenced.",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.rbac.v1beta1.ClusterRole": {
    "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this ClusterRole",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.PolicyRule"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.ClusterRoleBinding": {
    "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.Subject"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleBinding",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.ClusterRoleBindingList": {
    "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of ClusterRoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.ClusterRoleBinding"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleBindingList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.ClusterRoleList": {
    "description": "ClusterRoleList is a collection of ClusterRoles",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of ClusterRoles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.ClusterRole"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "ClusterRoleList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.PolicyRule": {
    "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
    "required": [
     "verbs"
    ],
    "properties": {
     "apiGroups": {
      "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "nonResourceURLs": {
      "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resourceNames": {
      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resources": {
      "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "verbs": {
      "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },


   "io.k8s.api.rbac.v1beta1.Role": {
    "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this Role",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.PolicyRule"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "Role",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.RoleBinding": {
    "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.Subject"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleBinding",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.RoleBindingList": {
    "description": "RoleBindingList is a collection of RoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of RoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.RoleBinding"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleBindingList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.RoleList": {
    "description": "RoleList is a collection of Roles",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of Roles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.Role"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "RoleList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.rbac.v1beta1.RoleRef": {
    "description": "RoleRef contains information that points to the role being used",
    "required": [
     "apiGroup",
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string"
     }
    }
   },


   "io.k8s.api.rbac.v1beta1.Subject": {
    "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
      "type": "string"
     },
     "name": {
      "description": "Name of the object being referenced.",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
      "type": "string"
     }
    }
   },


   "io.k8s.api.scheduling.v1alpha1.PriorityClass": {
    "description": "PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.",
    "required": [
     "value"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "description": {
      "description": "description is an arbitrary string that usually provides guidelines on when this priority class should be used.",
      "type": "string"
     },
     "globalDefault": {
      "description": "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "value": {
      "description": "The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.",
      "type": "integer",
      "format": "int32"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "scheduling.k8s.io",
      "kind": "PriorityClass",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.scheduling.v1alpha1.PriorityClassList": {
    "description": "PriorityClassList is a collection of priority classes.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "items is the list of PriorityClasses",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.scheduling.v1alpha1.PriorityClass"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "scheduling.k8s.io",
      "kind": "PriorityClassList",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.settings.v1alpha1.PodPreset": {
    "description": "PodPreset is a policy resource that defines additional runtime requirements for a Pod.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "$ref": "#/definitions/io.k8s.api.settings.v1alpha1.PodPresetSpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "settings.k8s.io",
      "kind": "PodPreset",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.settings.v1alpha1.PodPresetList": {
    "description": "PodPresetList is a list of PodPreset objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of schema objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.settings.v1alpha1.PodPreset"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "settings.k8s.io",
      "kind": "PodPresetList",
      "version": "v1alpha1"
     }
    ]
   },


   "io.k8s.api.settings.v1alpha1.PodPresetSpec": {
    "description": "PodPresetSpec is a description of a pod preset.",
    "properties": {
     "env": {
      "description": "Env defines the collection of EnvVar to inject into containers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
      }
     },
     "envFrom": {
      "description": "EnvFrom defines the collection of EnvFromSource to inject into containers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
      }
     },
     "selector": {
      "description": "Selector is a label query over a set of resources, in this case pods. Required.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "volumeMounts": {
      "description": "VolumeMounts defines the collection of VolumeMount to inject into containers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
      }
     },
     "volumes": {
      "description": "Volumes defines the collection of Volume to inject into the pod.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
      }
     }
    }
   },


   "io.k8s.api.storage.v1.StorageClass": {
    "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
    "required": [
     "provisioner"
    ],
    "properties": {
     "allowVolumeExpansion": {
      "description": "AllowVolumeExpansion shows whether the storage class allow volume expand",
      "type": "boolean"
     },
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "mountOptions": {
      "description": "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "parameters": {
      "description": "Parameters holds the parameters for the provisioner that should create volumes of this storage class.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "provisioner": {
      "description": "Provisioner indicates the type of the provisioner.",
      "type": "string"
     },
     "reclaimPolicy": {
      "description": "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "storage.k8s.io",
      "kind": "StorageClass",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.storage.v1.StorageClassList": {
    "description": "StorageClassList is a collection of storage classes.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of StorageClasses",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.storage.v1.StorageClass"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "storage.k8s.io",
      "kind": "StorageClassList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.api.storage.v1beta1.StorageClass": {
    "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
    "required": [
     "provisioner"
    ],
    "properties": {
     "allowVolumeExpansion": {
      "description": "AllowVolumeExpansion shows whether the storage class allow volume expand",
      "type": "boolean"
     },
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "mountOptions": {
      "description": "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "parameters": {
      "description": "Parameters holds the parameters for the provisioner that should create volumes of this storage class.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "provisioner": {
      "description": "Provisioner indicates the type of the provisioner.",
      "type": "string"
     },
     "reclaimPolicy": {
      "description": "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "storage.k8s.io",
      "kind": "StorageClass",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.api.storage.v1beta1.StorageClassList": {
    "description": "StorageClassList is a collection of storage classes.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of StorageClasses",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.storage.v1beta1.StorageClass"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "storage.k8s.io",
      "kind": "StorageClassList",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition": {
    "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format \u003c.spec.name\u003e.\u003c.spec.group\u003e.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec describes how the user wants the resources to appear",
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec"
     },
     "status": {
      "description": "Status indicates the actual state of the CustomResourceDefinition",
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionCondition": {
    "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "Human-readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status is the status of the condition. Can be True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type is the type of the condition.",
      "type": "string"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList": {
    "description": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items individual CustomResourceDefinitions",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames": {
    "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
    "required": [
     "plural",
     "kind"
    ],
    "properties": {
     "kind": {
      "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
      "type": "string"
     },
     "listKind": {
      "description": "ListKind is the serialized kind of the list for this resource.  Defaults to \u003ckind\u003eList.",
      "type": "string"
     },
     "plural": {
      "description": "Plural is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
      "type": "string"
     },
     "shortNames": {
      "description": "ShortNames are short names for the resource.  It must be all lowercase.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "singular": {
      "description": "Singular is the singular name of the resource.  It must be all lowercase  Defaults to lowercased \u003ckind\u003e",
      "type": "string"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec": {
    "description": "CustomResourceDefinitionSpec describes how a user wants their resource to appear",
    "required": [
     "group",
     "version",
     "names",
     "scope"
    ],
    "properties": {
     "group": {
      "description": "Group is the group this resource belongs in",
      "type": "string"
     },
     "names": {
      "description": "Names are the names used to describe this custom resource",
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames"
     },
     "scope": {
      "description": "Scope indicates whether this resource is cluster or namespace scoped.  Default is namespaced",
      "type": "string"
     },
     "validation": {
      "description": "Validation describes the validation methods for CustomResources This field is alpha-level and should only be sent to servers that enable the CustomResourceValidation feature.",
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation"
     },
     "version": {
      "description": "Version is the version this resource belongs in",
      "type": "string"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus": {
    "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
    "required": [
     "conditions",
     "acceptedNames"
    ],
    "properties": {
     "acceptedNames": {
      "description": "AcceptedNames are the names that are actually being used to serve discovery They may be different than the names in spec.",
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames"
     },
     "conditions": {
      "description": "Conditions indicate state for particular aspects of a CustomResourceDefinition",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionCondition"
      }
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation": {
    "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
    "properties": {
     "openAPIV3Schema": {
      "description": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.",
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation": {
    "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
    "properties": {
     "description": {
      "type": "string"
     },
     "url": {
      "type": "string"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON": {
    "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
    "required": [
     "Raw"
    ],
    "properties": {
     "Raw": {
      "type": "string",
      "format": "byte"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps": {
    "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
    "properties": {
     "$ref": {
      "type": "string"
     },
     "$schema": {
      "type": "string"
     },
     "additionalItems": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool"
     },
     "additionalProperties": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool"
     },
     "allOf": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "anyOf": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "default": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON"
     },
     "definitions": {
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "dependencies": {
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray"
      }
     },
     "description": {
      "type": "string"
     },
     "enum": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON"
      }
     },
     "example": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON"
     },
     "exclusiveMaximum": {
      "type": "boolean"
     },
     "exclusiveMinimum": {
      "type": "boolean"
     },
     "externalDocs": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation"
     },
     "format": {
      "type": "string"
     },
     "id": {
      "type": "string"
     },
     "items": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray"
     },
     "maxItems": {
      "type": "integer",
      "format": "int64"
     },
     "maxLength": {
      "type": "integer",
      "format": "int64"
     },
     "maxProperties": {
      "type": "integer",
      "format": "int64"
     },
     "maximum": {
      "type": "number",
      "format": "double"
     },
     "minItems": {
      "type": "integer",
      "format": "int64"
     },
     "minLength": {
      "type": "integer",
      "format": "int64"
     },
     "minProperties": {
      "type": "integer",
      "format": "int64"
     },
     "minimum": {
      "type": "number",
      "format": "double"
     },
     "multipleOf": {
      "type": "number",
      "format": "double"
     },
     "not": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
     },
     "oneOf": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "pattern": {
      "type": "string"
     },
     "patternProperties": {
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "properties": {
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "required": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "title": {
      "type": "string"
     },
     "type": {
      "type": "string"
     },
     "uniqueItems": {
      "type": "boolean"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray": {
    "description": "JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes.",
    "required": [
     "Schema",
     "JSONSchemas"
    ],
    "properties": {
     "JSONSchemas": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
      }
     },
     "Schema": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool": {
    "description": "JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property.",
    "required": [
     "Allows",
     "Schema"
    ],
    "properties": {
     "Allows": {
      "type": "boolean"
     },
     "Schema": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
     }
    }
   },


   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray": {
    "description": "JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.",
    "required": [
     "Schema",
     "Property"
    ],
    "properties": {
     "Property": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Schema": {
      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
     }
    }
   },


   "io.k8s.apimachinery.pkg.api.resource.Quantity": {
    "type": "string"
   },
   "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
    "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
    "required": [
     "name",
     "versions",
     "serverAddressByClientCIDRs"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "name is the name of the group.",
      "type": "string"
     },
     "preferredVersion": {
      "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
     },
     "serverAddressByClientCIDRs": {
      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
      }
     },
     "versions": {
      "description": "versions are the versions supported in this group.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "APIGroup",
      "version": "v1"
     }
    ]
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
    "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
    "required": [
     "groups"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "groups": {
      "description": "groups is a list of APIGroup.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "APIGroupList",
      "version": "v1"
     }
    ]
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "required": [
     "name",
     "singularName",
     "namespaced",
     "kind",
     "verbs"
    ],
    "properties": {
     "categories": {
      "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "group": {
      "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
      "type": "string"
     },
     "kind": {
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
      "type": "string"
     },
     "name": {
      "description": "name is the plural name of the resource.",
      "type": "string"
     },
     "namespaced": {
      "description": "namespaced indicates if a resource is namespaced or not.",
      "type": "boolean"
     },
     "shortNames": {
      "description": "shortNames is a list of suggested short names of the resource.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "singularName": {
      "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
      "type": "string"
     },
     "verbs": {
      "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "version": {
      "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "groupVersion": {
      "description": "groupVersion is the group and version this APIResourceList is for.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "resources": {
      "description": "resources contains the name of the resources and if they are namespaced.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "APIResourceList",
      "version": "v1"
     }
    ]
   },


  
  


   "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      },
      "x-kubernetes-patch-strategy": "merge"
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "initializers": {
      "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
      },
      "x-kubernetes-patch-merge-key": "uid",
      "x-kubernetes-patch-strategy": "merge"
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "blockOwnerDeletion": {
      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
      "type": "boolean"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
   },
   "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "properties": {
     "uid": {
      "description": "Specifies the target UID.",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
    "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
    "required": [
     "clientCIDR",
     "serverAddress"
    ],
    "properties": {
     "clientCIDR": {
      "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
      "type": "string"
     },
     "serverAddress": {
      "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "Status",
      "version": "v1"
     }
    ]
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
      "type": "integer",
      "format": "int32"
     },
     "uid": {
      "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },


   "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
    "type": "string",
    "format": "date-time"
   },
   "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
    "description": "Event represents a single event to a watched resource.",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
     },
     "type": {
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "admission.k8s.io",
      "kind": "WatchEvent",
      "version": "v1alpha1"
     },
     {
      "group": "admissionregistration.k8s.io",
      "kind": "WatchEvent",
      "version": "v1alpha1"
     },
     {
      "group": "apps",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "apps",
      "kind": "WatchEvent",
      "version": "v1beta2"
     },
     {
      "group": "authentication.k8s.io",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "authentication.k8s.io",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "authorization.k8s.io",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "authorization.k8s.io",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "autoscaling",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "autoscaling",
      "kind": "WatchEvent",
      "version": "v2beta1"
     },
     {
      "group": "batch",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "batch",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "batch",
      "kind": "WatchEvent",
      "version": "v2alpha1"
     },
     {
      "group": "certificates.k8s.io",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "extensions",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "federation",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "imagepolicy.k8s.io",
      "kind": "WatchEvent",
      "version": "v1alpha1"
     },
     {
      "group": "networking.k8s.io",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "policy",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "WatchEvent",
      "version": "v1alpha1"
     },
     {
      "group": "rbac.authorization.k8s.io",
      "kind": "WatchEvent",
      "version": "v1beta1"
     },
     {
      "group": "scheduling.k8s.io",
      "kind": "WatchEvent",
      "version": "v1alpha1"
     },
     {
      "group": "settings.k8s.io",
      "kind": "WatchEvent",
      "version": "v1alpha1"
     },
     {
      "group": "storage.k8s.io",
      "kind": "WatchEvent",
      "version": "v1"
     },
     {
      "group": "storage.k8s.io",
      "kind": "WatchEvent",
      "version": "v1beta1"
     }
    ]
   },


   "io.k8s.apimachinery.pkg.runtime.RawExtension": {
    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
    "required": [
     "Raw"
    ],
    "properties": {
     "Raw": {
      "description": "Raw is the underlying serialization of this object.",
      "type": "string",
      "format": "byte"
     }
    }
   },


   "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
    "type": "string",
    "format": "int-or-string"
   },
   "io.k8s.apimachinery.pkg.version.Info": {
    "description": "Info contains versioning information. how we'll want to distribute that information.",
    "required": [
     "major",
     "minor",
     "gitVersion",
     "gitCommit",
     "gitTreeState",
     "buildDate",
     "goVersion",
     "compiler",
     "platform"
    ],
    "properties": {
     "buildDate": {
      "type": "string"
     },
     "compiler": {
      "type": "string"
     },
     "gitCommit": {
      "type": "string"
     },
     "gitTreeState": {
      "type": "string"
     },
     "gitVersion": {
      "type": "string"
     },
     "goVersion": {
      "type": "string"
     },
     "major": {
      "type": "string"
     },
     "minor": {
      "type": "string"
     },
     "platform": {
      "type": "string"
     }
    }
   },


   "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIService": {
    "description": "APIService represents a server for a particular GroupVersion. Name must be \"version.group\".",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec contains information for locating and communicating with a server",
      "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceSpec"
     },
     "status": {
      "description": "Status contains derived information about an API server",
      "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceStatus"
     }
    }
   },


   "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceCondition": {
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "Human-readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status is the status of the condition. Can be True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type is the type of the condition.",
      "type": "string"
     }
    }
   },


   "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceList": {
    "description": "APIServiceList is a list of APIService objects.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIService"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },


   "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceSpec": {
    "description": "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.",
    "required": [
     "service",
     "caBundle",
     "groupPriorityMinimum",
     "versionPriority"
    ],
    "properties": {
     "caBundle": {
      "description": "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate.",
      "type": "string",
      "format": "byte"
     },
     "group": {
      "description": "Group is the API group name this server hosts",
      "type": "string"
     },
     "groupPriorityMinimum": {
      "description": "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is prefered by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s",
      "type": "integer",
      "format": "int32"
     },
     "insecureSkipTLSVerify": {
      "description": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.",
      "type": "boolean"
     },
     "service": {
      "description": "Service is a reference to the service for this API server.  It must communicate on port 443 If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.",
      "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.ServiceReference"
     },
     "version": {
      "description": "Version is the API version this server hosts.  For example, \"v1\"",
      "type": "string"
     },
     "versionPriority": {
      "description": "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) Since it's inside of a group, the number can be small, probably in the 10s.",
      "type": "integer",
      "format": "int32"
     }
    }
   },


   "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceStatus": {
    "description": "APIServiceStatus contains derived information about an API server",
    "properties": {
     "conditions": {
      "description": "Current service state of apiService.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     }
    }
   },


 

 }
