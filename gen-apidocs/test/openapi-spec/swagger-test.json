{
  "swagger": "2.0",
  "info": {
   "title": "Kubernetes",
   "version": "v1.8.0"
  },
  "paths": {
   "/api/": {
    "get": {
     "description": "get available API versions",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core"
     ],
     "operationId": "getCoreAPIVersions",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/api/v1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "getCoreV1APIResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "listAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "createAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "deleteAppsV1beta1CollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },  
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "readAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "replaceAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "deleteAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "patchAppsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/rollback": {
    "post": {
     "description": "create rollback of a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "createAppsV1beta1NamespacedDeploymentRollback",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentRollback"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentRollback"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DeploymentRollback",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "readAppsV1beta1NamespacedDeploymentScale",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "replaceAppsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update scale of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "patchAppsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },   
   "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "readAppsV1beta1NamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "replaceAppsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "patchAppsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },  
   "/apis/apps/v1beta1/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "watchAppsV1beta1DeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },  
   "/apis/apps/v1beta1/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "watchAppsV1beta1NamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },   
   "/apis/apps/v1beta1/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta1"
     ],
     "operationId": "watchAppsV1beta1NamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },  
   "/apis/apps/v1beta2/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "listAppsV1beta2DeploymentForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   }, 
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "listAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "createAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "deleteAppsV1beta2CollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },   
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "readAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "replaceAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "deleteAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "patchAppsV1beta2NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },   
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "readAppsV1beta2NamespacedDeploymentScale",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "put": {
     "description": "replace scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "replaceAppsV1beta2NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "patch": {
     "description": "partially update scale of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "patchAppsV1beta2NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },   
   "/apis/apps/v1beta2/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "readAppsV1beta2NamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "replaceAppsV1beta2NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "patchAppsV1beta2NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.apps.v1beta2.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   }, 
   "/apis/apps/v1beta2/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "watchAppsV1beta2DeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },  
   "/apis/apps/v1beta2/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "watchAppsV1beta2NamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },  
   "/apis/apps/v1beta2/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "apps_v1beta2"
     ],
     "operationId": "watchAppsV1beta2NamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watch",
     "x-kubernetes-group-version-kind": {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },  
   "/apis/extensions/v1beta1/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "listExtensionsV1beta1DeploymentForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "listExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "createExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "deleteExtensionsV1beta1CollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },   
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "readExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "replaceExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "deleteExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "patchExtensionsV1beta1NamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },  
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback": {
    "post": {
     "description": "create rollback of a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "createExtensionsV1beta1NamespacedDeploymentRollback",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentRollback"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentRollback"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DeploymentRollback",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },  
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "readExtensionsV1beta1NamespacedDeploymentScale",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace scale of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "replaceExtensionsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update scale of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "patchExtensionsV1beta1NamespacedDeploymentScale",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Scale"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },  
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "readExtensionsV1beta1NamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "replaceExtensionsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "patchExtensionsV1beta1NamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   }, 
   "/apis/extensions/v1beta1/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "watchExtensionsV1beta1DeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "watchExtensionsV1beta1NamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watchlist",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },   
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "extensions_v1beta1"
     ],
     "operationId": "watchExtensionsV1beta1NamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "watch",
     "x-kubernetes-group-version-kind": {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
  },
  "definitions": {
   "io.k8s.api.apps.v1beta1.Deployment": {
    "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    ]
   },   
   "io.k8s.api.apps.v1beta1.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.",
      "type": "integer",
      "format": "int32"
     },
     "rollbackTo": {
      "description": "DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.RollbackConfig"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentSpec",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.apps.v1beta1.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "io.k8s.api.apps.v1beta1.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
   },
   "io.k8s.api.apps.v1beta1.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentStrategy",
      "version": "v1beta1"
     }
    ]
   },    
   "io.k8s.api.apps.v1beta1.RollbackConfig": {
    "description": "DEPRECATED.",
    "properties": {
     "revision": {
      "description": "The revision to rollback to. If set to 0, rollback to the last revision.",
      "type": "integer",
      "format": "int64"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "RollbackConfig",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.apps.v1beta1.RollingUpdateDeployment": {
    "description": "Spec to control the desired behavior of rolling update.",
    "properties": {
     "maxSurge": {
      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "maxUnavailable": {
      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "RollingUpdateDeployment",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.apps.v1beta1.Scale": {
    "description": "Scale represents a scaling request for a resource.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta1.ScaleStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.apps.v1beta1.ScaleSpec": {
    "description": "ScaleSpec describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "ScaleSpec",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.apps.v1beta1.ScaleStatus": {
    "description": "ScaleStatus represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "ScaleStatus",
      "version": "v1beta1"
     }
    ]
   },    
   "io.k8s.api.apps.v1beta2.Deployment": {
    "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentSpec",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentStatus",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentStrategy",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.Scale": {
    "description": "Scale represents a scaling request for a resource.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.ScaleStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Scale",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.ScaleSpec": {
    "description": "ScaleSpec describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "ScaleSpec",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.apps.v1beta2.ScaleStatus": {
    "description": "ScaleStatus represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "ScaleStatus",
      "version": "v1beta2"
     }
    ]
   },    
   "io.k8s.api.core.v1.Container": {
    "description": "A single application container that you want to run within a pod.",
    "required": [
     "name"
    ],
    "properties": {
     "args": {
      "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "command": {
      "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "env": {
      "description": "List of environment variables to set in the container. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "envFrom": {
      "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
      }
     },
     "image": {
      "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
      "type": "string"
     },
     "imagePullPolicy": {
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
      "type": "string"
     },
     "lifecycle": {
      "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
      "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
     },
     "livenessProbe": {
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
     },
     "name": {
      "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
      "type": "string"
     },
     "ports": {
      "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
      },
      "x-kubernetes-patch-merge-key": "containerPort",
      "x-kubernetes-patch-strategy": "merge"
     },
     "readinessProbe": {
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
     },
     "resources": {
      "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
     },
     "securityContext": {
      "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://git.k8s.io/community/contributors/design-proposals/security_context.md",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
     },
     "stdin": {
      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
      "type": "boolean"
     },
     "stdinOnce": {
      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
      "type": "boolean"
     },
     "terminationMessagePath": {
      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
      "type": "string"
     },
     "terminationMessagePolicy": {
      "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
      "type": "string"
     },
     "tty": {
      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
      "type": "boolean"
     },
     "volumeMounts": {
      "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
      },
      "x-kubernetes-patch-merge-key": "mountPath",
      "x-kubernetes-patch-strategy": "merge"
     },
     "workingDir": {
      "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Container",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.ContainerPort": {
    "description": "ContainerPort represents a network port in a single container.",
    "required": [
     "containerPort"
    ],
    "properties": {
     "containerPort": {
      "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
      "type": "integer",
      "format": "int32"
     },
     "hostIP": {
      "description": "What host IP to bind the external port to.",
      "type": "string"
     },
     "hostPort": {
      "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
      "type": "integer",
      "format": "int32"
     },
     "name": {
      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
      "type": "string"
     },
     "protocol": {
      "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ContainerPort",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.EnvFromSource": {
    "description": "EnvFromSource represents the source of a set of ConfigMaps",
    "properties": {
     "configMapRef": {
      "description": "The ConfigMap to select from",
      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
     },
     "prefix": {
      "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "secretRef": {
      "description": "The Secret to select from",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "EnvFromSource",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.EnvVar": {
    "description": "EnvVar represents an environment variable present in a Container.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "value": {
      "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
      "type": "string"
     },
     "valueFrom": {
      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
      "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "EnvVar",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.EnvVarSource": {
    "description": "EnvVarSource represents a source for the value of an EnvVar.",
    "properties": {
     "configMapKeyRef": {
      "description": "Selects a key of a ConfigMap.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
     },
     "fieldRef": {
      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
     },
     "resourceFieldRef": {
      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
     },
     "secretKeyRef": {
      "description": "Selects a key of a secret in the pod's namespace",
      "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "EnvVarSource",
      "version": "v1"
     }
    ]
   }, 
   "io.k8s.api.core.v1.HTTPGetAction": {
    "description": "HTTPGetAction describes an action based on HTTP Get requests.",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
      "type": "string"
     },
     "httpHeaders": {
      "description": "Custom headers to set in the request. HTTP allows repeated headers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
      }
     },
     "path": {
      "description": "Path to access on the HTTP server.",
      "type": "string"
     },
     "port": {
      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "scheme": {
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "HTTPGetAction",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.HTTPHeader": {
    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
    "required": [
     "name",
     "value"
    ],
    "properties": {
     "name": {
      "description": "The header field name",
      "type": "string"
     },
     "value": {
      "description": "The header field value",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "HTTPHeader",
      "version": "v1"
     }
    ]
   }, 
   "io.k8s.api.core.v1.HostAlias": {
    "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
    "properties": {
     "hostnames": {
      "description": "Hostnames for the above IP address.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "ip": {
      "description": "IP address of the host file entry.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "HostAlias",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.Pod": {
    "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
     },
     "status": {
      "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Pod",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodAffinity": {
    "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodAffinity",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodAffinityTerm": {
    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e tches that of any node on which a pod of the set of pods is running",
    "properties": {
     "labelSelector": {
      "description": "A label query over a set of resources, in this case pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "namespaces": {
      "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "topologyKey": {
      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. For PreferredDuringScheduling pod anti-affinity, empty topologyKey is interpreted as \"all topologies\" (\"all topologies\" here means all the topologyKeys indicated by scheduler command-line argument --failure-domains); for affinity and for RequiredDuringScheduling pod anti-affinity, empty topologyKey is not allowed.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodAffinityTerm",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodAntiAffinity": {
    "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodAntiAffinity",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodCondition": {
    "description": "PodCondition contains details for the current condition of this pod.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "description": "Last time we probed the condition.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "Human-readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
      "type": "string"
     },
     "type": {
      "description": "Type is the type of the condition. Currently only Ready. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodCondition",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodSecurityContext": {
    "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
    "properties": {
     "fsGroup": {
      "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
      "type": "integer",
      "format": "int64"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
     },
     "supplementalGroups": {
      "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int64"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodSecurityContext",
      "version": "v1"
     }
    ]
   },  
   "io.k8s.api.core.v1.Capabilities": {
    "description": "Adds and removes POSIX capabilities from running containers.",
    "properties": {
     "add": {
      "description": "Added capabilities",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "drop": {
      "description": "Removed capabilities",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Capabilities",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodSpec": {
    "description": "PodSpec is a description of a pod.",
    "required": [
     "containers"
    ],
    "properties": {
     "activeDeadlineSeconds": {
      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
      "type": "integer",
      "format": "int64"
     },
     "affinity": {
      "description": "If specified, the pod's scheduling constraints",
      "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
     },
     "automountServiceAccountToken": {
      "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
      "type": "boolean"
     },
     "containers": {
      "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Container"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "dnsPolicy": {
      "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
      "type": "string"
     },
     "hostAliases": {
      "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
      },
      "x-kubernetes-patch-merge-key": "ip",
      "x-kubernetes-patch-strategy": "merge"
     },
     "hostIPC": {
      "description": "Use the host's ipc namespace. Optional: Default to false.",
      "type": "boolean"
     },
     "hostNetwork": {
      "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
      "type": "boolean"
     },
     "hostPID": {
      "description": "Use the host's pid namespace. Optional: Default to false.",
      "type": "boolean"
     },
     "hostname": {
      "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
      "type": "string"
     },
     "imagePullSecrets": {
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "initContainers": {
      "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Container"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "nodeName": {
      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
      "type": "string"
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "priority": {
      "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
      "type": "integer",
      "format": "int32"
     },
     "priorityClassName": {
      "description": "If specified, indicates the pod's priority. \"SYSTEM\" is a special keyword which indicates the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
      "type": "string"
     },
     "restartPolicy": {
      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
      "type": "string"
     },
     "schedulerName": {
      "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
      "type": "string"
     },
     "securityContext": {
      "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
     },
     "serviceAccount": {
      "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
      "type": "string"
     },
     "serviceAccountName": {
      "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
      "type": "string"
     },
     "subdomain": {
      "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\". If not specified, the pod will not have a domainname at all.",
      "type": "string"
     },
     "terminationGracePeriodSeconds": {
      "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
      "type": "integer",
      "format": "int64"
     },
     "tolerations": {
      "description": "If specified, the pod's tolerations.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
      }
     },
     "volumes": {
      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge,retainKeys"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodSpec",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodStatus": {
    "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system.",
    "properties": {
     "conditions": {
      "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PodCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "containerStatuses": {
      "description": "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
      }
     },
     "hostIP": {
      "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
      "type": "string"
     },
     "initContainerStatuses": {
      "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
      }
     },
     "message": {
      "description": "A human readable message indicating details about why the pod is in this condition.",
      "type": "string"
     },
     "phase": {
      "description": "Current condition of the pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase",
      "type": "string"
     },
     "podIP": {
      "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
      "type": "string"
     },
     "qosClass": {
      "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://github.com/kubernetes/kubernetes/blob/master/docs/design/resource-qos.md",
      "type": "string"
     },
     "reason": {
      "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
      "type": "string"
     },
     "startTime": {
      "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodStatus",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodTemplate": {
    "description": "PodTemplate describes a template for creating copies of a predefined pod.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "template": {
      "description": "Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodTemplate",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.PodTemplateSpec": {
    "description": "PodTemplateSpec describes the data a pod should have when created from a template",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PodTemplateSpec",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.Probe": {
    "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
     },
     "failureThreshold": {
      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
     },
     "initialDelaySeconds": {
      "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     },
     "periodSeconds": {
      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "successThreshold": {
      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
     },
     "timeoutSeconds": {
      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Probe",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.SELinuxOptions": {
    "description": "SELinuxOptions are the labels to be applied to the container",
    "properties": {
     "level": {
      "description": "Level is SELinux level label that applies to the container.",
      "type": "string"
     },
     "role": {
      "description": "Role is a SELinux role label that applies to the container.",
      "type": "string"
     },
     "type": {
      "description": "Type is a SELinux type label that applies to the container.",
      "type": "string"
     },
     "user": {
      "description": "User is a SELinux user label that applies to the container.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "SELinuxOptions",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.EmptyDirVolumeSource": {
    "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
    "properties": {
     "medium": {
      "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
      "type": "string"
     },
     "sizeLimit": {
      "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "EmptyDirVolumeSource",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.Toleration": {
    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
    "properties": {
     "effect": {
      "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
      "type": "string"
     },
     "key": {
      "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
      "type": "string"
     },
     "operator": {
      "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
      "type": "string"
     },
     "tolerationSeconds": {
      "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
      "type": "integer",
      "format": "int64"
     },
     "value": {
      "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Toleration",
      "version": "v1"
     }
    ]
   },  
   "io.k8s.api.core.v1.LocalObjectReference": {
    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "LocalObjectReference",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.ResourceRequirements": {
    "description": "ResourceRequirements describes the compute resource requirements.",
    "properties": {
     "limits": {
      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
      }
     },
     "requests": {
      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ResourceRequirements",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.ExecAction": {
    "description": "ExecAction describes a \"run in container\" action.",
    "properties": {
     "command": {
      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ExecAction",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.Lifecycle": {
    "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
    "properties": {
     "postStart": {
      "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
      "$ref": "#/definitions/io.k8s.api.core.v1.Handler"
     },
     "preStop": {
      "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
      "$ref": "#/definitions/io.k8s.api.core.v1.Handler"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Lifecycle",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.Affinity": {
    "description": "Affinity is a group of affinity scheduling rules.",
    "properties": {
     "nodeAffinity": {
      "description": "Describes node affinity scheduling rules for the pod.",
      "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
     },
     "podAffinity": {
      "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
     },
     "podAntiAffinity": {
      "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Affinity",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.PreferredSchedulingTerm": {
    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
    "required": [
     "weight",
     "preference"
    ],
    "properties": {
     "preference": {
      "description": "A node selector term, associated with the corresponding weight.",
      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
     },
     "weight": {
      "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "PreferredSchedulingTerm",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.NodeSelector": {
    "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
    "required": [
     "nodeSelectorTerms"
    ],
    "properties": {
     "nodeSelectorTerms": {
      "description": "Required. A list of node selector terms. The terms are ORed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "NodeSelector",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.NodeSelectorRequirement": {
    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "The label key that the selector applies to.",
      "type": "string"
     },
     "operator": {
      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
      "type": "string"
     },
     "values": {
      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "NodeSelectorRequirement",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.NodeSelectorTerm": {
    "description": "A null or empty node selector term matches no objects.",
    "required": [
     "matchExpressions"
    ],
    "properties": {
     "matchExpressions": {
      "description": "Required. A list of node selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "NodeSelectorTerm",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.SecurityContext": {
    "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
    "properties": {
     "allowPrivilegeEscalation": {
      "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
      "type": "boolean"
     },
     "capabilities": {
      "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
      "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
     },
     "privileged": {
      "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
      "type": "boolean"
     },
     "readOnlyRootFilesystem": {
      "description": "Whether this container has a read-only root filesystem. Default is false.",
      "type": "boolean"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "SecurityContext",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.Handler": {
    "description": "Handler defines a specific action that should be taken",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take.",
      "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Handler",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.TCPSocketAction": {
    "description": "TCPSocketAction describes an action based on opening a socket",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Optional: Host name to connect to, defaults to the pod IP.",
      "type": "string"
     },
     "port": {
      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "TCPSocketAction",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.SecretEnvSource": {
    "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the Secret must be defined",
      "type": "boolean"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "SecretEnvSource",
      "version": "v1"
     }
    ]
   },  
   "io.k8s.api.core.v1.SecretKeySelector": {
    "description": "SecretKeySelector selects a key of a Secret.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key of the secret to select from.  Must be a valid secret key.",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the Secret or it's key must be defined",
      "type": "boolean"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "SecretKeySelector",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.ResourceFieldSelector": {
    "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
    "required": [
     "resource"
    ],
    "properties": {
     "containerName": {
      "description": "Container name: required for volumes, optional for env vars",
      "type": "string"
     },
     "divisor": {
      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
     },
     "resource": {
      "description": "Required: resource to select",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ResourceFieldSelector",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.ObjectFieldSelector": {
    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
    "required": [
     "fieldPath"
    ],
    "properties": {
     "apiVersion": {
      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
      "type": "string"
     },
     "fieldPath": {
      "description": "Path of the field to select in the specified API version.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ObjectFieldSelector",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.api.core.v1.ConfigMapEnvSource": {
    "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the ConfigMap must be defined",
      "type": "boolean"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ConfigMapEnvSource",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.ConfigMapKeySelector": {
    "description": "Selects a key from a ConfigMap.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key to select.",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the ConfigMap or it's key must be defined",
      "type": "boolean"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "ConfigMapConfigSelector",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.api.core.v1.NodeAffinity": {
    "description": "Node affinity is a group of node affinity scheduling rules.",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "NodeAffinity",
      "version": "v1"
     }
    ]
   },  
   "io.k8s.api.core.v1.Volume": {
    "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
    "required": [
     "name"
    ],
    "properties": {
     "emptyDir": {
      "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
      "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
     }
     "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "Volume",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.VolumeMount": {
    "description": "VolumeMount describes a mounting of a Volume within a container.",
    "required": [
     "name",
     "mountPath"
    ],
    "properties": {
     "mountPath": {
      "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
      "type": "string"
     },
     "mountPropagation": {
      "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationHostToContainer is used. This field is alpha in 1.8 and can be reworked or removed in a future release.",
      "type": "string"
     },
     "name": {
      "description": "This must match the Name of a Volume.",
      "type": "string"
     },
     "readOnly": {
      "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
      "type": "boolean"
     },
     "subPath": {
      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "VolumeMount",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
    "required": [
     "weight",
     "podAffinityTerm"
    ],
    "properties": {
     "podAffinityTerm": {
      "description": "Required. A pod affinity term, associated with the corresponding weight.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
     },
     "weight": {
      "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "core",
      "kind": "WeightedPodAffinityTerm",
      "version": "v1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.Deployment": {
    "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentCondition",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentList": {
    "description": "DeploymentList is a list of Deployments.",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is the list of Deployments.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Deployment"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentList",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentRollback": {
    "description": "DEPRECATED. DeploymentRollback stores the information required to rollback a deployment.",
    "required": [
     "name",
     "rollbackTo"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Required: This must match the Name of a deployment.",
      "type": "string"
     },
     "rollbackTo": {
      "description": "The config of this deployment rollback.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollbackConfig"
     },
     "updatedAnnotations": {
      "description": "The annotations to be updated to a deployment",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentRollback",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused and will not be processed by the deployment controller.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is not set by default.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.",
      "type": "integer",
      "format": "int32"
     },
     "rollbackTo": {
      "description": "DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollbackConfig"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "x-kubernetes-patch-strategy": "retainKeys",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentSpec",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentStatus",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentStrategy",
      "version": "v1beta1"
     }
    ]
   }
   "io.k8s.api.extensions.v1beta1.Scale": {
    "description": "represents a scaling request for a resource.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ScaleStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "Scale",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.ScaleSpec": {
    "description": "describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "ScaleSpec",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.ScaleStatus": {
    "description": "represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "ScaleStatus",
      "version": "v1beta1"
     }
    ]
   },    
   "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
    "type": "string",
    "format": "int-or-string"
    "x-kubernetes-group-version-kind": [
     {
      "group": "todo",
      "kind": "IntOrString",
      "version": "todo"
     }
    ]
   },  
   "io.k8s.apimachinery.pkg.apis.meta.v1.Initializer": {
    "description": "Initializer is information about an initializer that has not yet completed.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "name of the process that is responsible for initializing this object.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "Initializer",
      "version": "v1"
     }
    ]
   },     
   "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "Status",
      "version": "v1"
     }
    ]
   },
   "io.k8s.apimachinery.pkg.api.resource.Quantity": {
    "type": "string"
    "x-kubernetes-group-version-kind": [
     {
      "group": "resource",
      "kind": "Quantity",
      "version": "todo"
     }
    ]
   },
   "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
      "type": "integer",
      "format": "int32"
     },
     "uid": {
      "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "StatusDetails",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "StatusCause",
      "version": "v1"
     }
    ]
   },       
   "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers": {
    "description": "Initializers tracks the progress of initialization.",
    "required": [
     "pending"
    ],
    "properties": {
     "pending": {
      "description": "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializer"
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
     },
     "result": {
      "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "Initializers",
      "version": "v1"
     }
    ]
   },       
   "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "LabelSelector",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string",
      "x-kubernetes-patch-merge-key": "key",
      "x-kubernetes-patch-strategy": "merge"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
      "type": "string"
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "LabelSelectorRequirement",
      "version": "v1"
     }
    ]
   },  
   "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "continue": {
      "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.",
      "type": "string"
     },
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "selfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "ListMeta",
      "version": "v1"
     }
    ]
   },    
   "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      },
      "x-kubernetes-patch-strategy": "merge"
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "initializers": {
      "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1."
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
      },
      "x-kubernetes-patch-merge-key": "uid",
      "x-kubernetes-patch-strategy": "merge"
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "ObjectMeta",
      "version": "v1"
     }
    ]
   },
   "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
    "type": "string",
    "format": "date-time"
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "Time",
      "version": "v1"
     }
    ]
   },   
   "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "blockOwnerDeletion": {
      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
      "type": "boolean"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "OwnerReference",
      "version": "v1"
     }
    ]
   },  
   "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
    "description": "Event represents a single event to a watched resource.",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
     },
     "type": {
      "type": "string"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "meta",
      "kind": "WatchEvent",
      "version": "v1"
     },
    ]
   },    
   "io.k8s.api.apps.v1beta2.Deployment": {
    "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "Deployment",
      "version": "v1beta2"
     }
    ]
   },     
   "io.k8s.api.apps.v1beta2.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentSpec",
      "version": "v1beta2"
     }
    ]
   },    
   "io.k8s.api.apps.v1beta2.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.apps.v1beta2.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentStrategy",
      "version": "v1beta2"
     }
    ]
   },    
   "io.k8s.api.apps.v1beta2.RollingUpdateDeployment": {
    "description": "Spec to control the desired behavior of rolling update.",
    "properties": {
     "maxSurge": {
      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "maxUnavailable": {
      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "RollingUpdateDeployment",
      "version": "v1beta2"
     }
    ]
   },  
  "io.k8s.api.apps.v1beta2.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.apps.v1beta2.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentStatus",
      "version": "v1beta2"
     }
    ]
   },      
   "io.k8s.api.apps.v1beta2.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "apps",
      "kind": "DeploymentCondition",
      "version": "v1beta2"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.Deployment": {
    "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentStatus"
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "Deployment",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentCondition": {
    "description": "DeploymentCondition describes the state of a deployment at a certain point.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "lastUpdateTime": {
      "description": "The last time this condition was updated.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
     },
     "message": {
      "description": "A human readable message indicating details about the transition.",
      "type": "string"
     },
     "reason": {
      "description": "The reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of deployment condition.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentCondition",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.RollingUpdateDeployment": {
    "description": "Spec to control the desired behavior of rolling update.",
    "properties": {
     "maxSurge": {
      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     },
     "maxUnavailable": {
      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "RollingUpdateDeployment",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentRollback": {
    "description": "DEPRECATED. DeploymentRollback stores the information required to rollback a deployment.",
    "required": [
     "name",
     "rollbackTo"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Required: This must match the Name of a deployment.",
      "type": "string"
     },
     "rollbackTo": {
      "description": "The config of this deployment rollback.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollbackConfig"
     },
     "updatedAnnotations": {
      "description": "The annotations to be updated to a deployment",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    },
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentRollback",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused and will not be processed by the deployment controller.",
      "type": "boolean"
     },
     "progressDeadlineSeconds": {
      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is not set by default.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.",
      "type": "integer",
      "format": "int32"
     },
     "rollbackTo": {
      "description": "DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollbackConfig"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "x-kubernetes-patch-strategy": "retainKeys",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentSpec",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "collisionCount": {
      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
      "type": "integer",
      "format": "int32"
     },
     "conditions": {
      "description": "Represents the latest available observations of a deployment's current state.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.DeploymentCondition"
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "Total number of ready pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentStatus",
      "version": "v1beta1"
     }
    ]
   },
   "io.k8s.api.extensions.v1beta1.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
    "x-kubernetes-group-version-kind": [
     {
      "group": "extensions",
      "kind": "DeploymentStrategy",
      "version": "v1beta1"
     }
    ]
   }
 }
